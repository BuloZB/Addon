<Page
    x:Class="AddonManager.Views.MasterDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="using:AddonManager.Core.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:AddonManager.Views"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    NavigationCacheMode="Required"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>




        <Style x:Key="mymaster" TargetType="controls:MasterDetailsView">
            <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:MasterDetailsView">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="RootPanel" Margin="12,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="MasterColumn" Width="505" />
                                    <ColumnDefinition x:Name="SplitterColumn" Width="3" />
                                    <ColumnDefinition x:Name="DetailsColumn" Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--  Width="{TemplateBinding MasterPaneWidth}"  -->
                                <Grid
                                    x:Name="MasterPanel"
                                    Background="{TemplateBinding MasterPaneBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,0,1,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter
                                        x:Name="HeaderContentPresenter"
                                        Margin="12,0"
                                        x:DeferLoadStrategy="Lazy"
                                        Content="{TemplateBinding MasterHeader}"
                                        ContentTemplate="{TemplateBinding MasterHeaderTemplate}"
                                        Visibility="Collapsed" />
                                    <ListView
                                        x:Name="MasterList"
                                        Grid.Row="1"
                                        IsTabStop="False"
                                        ItemContainerStyle="{StaticResource ListViewItemExpanded}"
                                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ItemsSource="{TemplateBinding ItemsSource}"
                                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

                                    <Grid x:Name="MasterCommandBarPanel" Grid.Row="2" />
                                </Grid>
                                <Grid x:Name="DetailsPanel" Grid.Column="2">
                                    <ContentPresenter
                                        x:Name="NoSelectionPresenter"
                                        Content="{TemplateBinding NoSelectionContent}"
                                        ContentTemplate="{TemplateBinding NoSelectionContentTemplate}" />
                                    <Grid x:Name="SelectionDetailsPanel">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Button
                                                x:Name="MasterDetailsBackButton"
                                                Width="48"
                                                Height="44"
                                                Background="Transparent"
                                                Visibility="Collapsed">
                                                <SymbolIcon Symbol="Back" />
                                            </Button>
                                            <ContentPresenter
                                                x:Name="DetailsHeaderPresenter"
                                                Grid.Column="1"
                                                Content="{TemplateBinding DetailsHeader}"
                                                ContentTemplate="{TemplateBinding DetailsHeaderTemplate}" />
                                        </Grid>
                                        <ContentPresenter
                                            x:Name="DetailsPresenter"
                                            Grid.Row="1"
                                            Background="{TemplateBinding Background}"
                                            ContentTemplate="{TemplateBinding DetailsTemplate}" />
                                        <Grid x:Name="DetailsCommandBarPanel" Grid.Row="2" />
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="DetailsPresenterTransform" />
                                        </Grid.RenderTransform>
                                    </Grid>
                                </Grid>
                                <controls:GridSplitter
                                    Grid.Column="1"
                                    Width="3"
                                    Background="Transparent"
                                    FontSize="13"
                                    Foreground="Transparent"
                                    ResizeBehavior="BasedOnAlignment"
                                    ResizeDirection="Auto" />
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="NoSelectionWide" To="HasSelection">
                                            <!--<Storyboard>

                                                <DrillInThemeAnimation EntranceTargetName="SelectionDetailsPanel" ExitTargetName="NoSelectionPresenter" />-->
                                            <!--</Storyboard>-->
                                        </VisualTransition>
                                        <VisualTransition From="NoSelectionNarrow" To="HasSelection">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetName="DetailsPresenterTransform"
                                                    Storyboard.TargetProperty="X"
                                                    From="200"
                                                    To="0"
                                                    Duration="0:0:0.25">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuarticEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetName="SelectionDetailsPanel"
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="0"
                                                    To="1"
                                                    Duration="0:0:0.25">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuarticEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="HasSelection" To="NoSelectionWide">
                                            <!--<Storyboard>
                                                <DrillOutThemeAnimation EntranceTargetName="NoSelectionPresenter" ExitTargetName="SelectionDetailsPanel" />
                                            </Storyboard>-->
                                        </VisualTransition>
                                        <VisualTransition From="HasSelection" To="NoSelectionNarrow">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    BeginTime="0:0:0"
                                                    Storyboard.TargetName="DetailsPresenterTransform"
                                                    Storyboard.TargetProperty="X"
                                                    From="0"
                                                    To="200"
                                                    Duration="0:0:0.25" />
                                                <DoubleAnimation
                                                    BeginTime="0:0:0.08"
                                                    Storyboard.TargetName="SelectionDetailsPanel"
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="1"
                                                    To="0"
                                                    Duration="0:0:0.17">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuarticEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                                    BeginTime="0:0:0.0"
                                                    Storyboard.TargetName="MasterPanel"
                                                    Storyboard.TargetProperty="Opacity"
                                                    From="0"
                                                    To="1"
                                                    Duration="0:0:0.25">
                                                    <DoubleAnimation.EasingFunction>
                                                        <QuarticEase EasingMode="EaseIn" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoSelectionWide">
                                        <VisualState.Setters>
                                            <Setter Target="SelectionDetailsPanel.Visibility" Value="Collapsed" />
                                            <Setter Target="MasterPanel.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="HasSelectionWide">
                                        <VisualState.Setters>
                                            <Setter Target="NoSelectionPresenter.Visibility" Value="Collapsed" />
                                            <Setter Target="MasterPanel.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="HasSelectionNarrow">
                                        <VisualState.Setters>
                                            <Setter Target="MasterPanel.Visibility" Value="Collapsed" />
                                            <Setter Target="NoSelectionPresenter.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="NoSelectionNarrow">
                                        <VisualState.Setters>
                                            <Setter Target="NoSelectionPresenter.Visibility" Value="Collapsed" />
                                            <Setter Target="SelectionDetailsPanel.Visibility" Value="Collapsed" />
                                            <Setter Target="MasterPanel.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="WidthStates">
                                    <VisualState x:Name="NarrowState">
                                        <VisualState.Setters>
                                            <Setter Target="MasterColumn.Width" Value="*" />
                                            <Setter Target="DetailsColumn.Width" Value="0" />
                                            <Setter Target="DetailsPanel.(Grid.Column)" Value="0" />
                                            <Setter Target="NoSelectionPresenter.Visibility" Value="Collapsed" />
                                            <Setter Target="MasterPanel.BorderThickness" Value="0" />
                                            <Setter Target="MasterPanel.Width" Value="NaN" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="WideState" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>











        <Style x:Key="mysyle2" TargetType="MenuFlyoutItem">
            <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemRevealBackground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutItemRevealBorderThickness}" />
            <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}" />
            <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuFlyoutItem">
                        <Grid
                            x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox
                                x:Name="IconRoot"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <ContentPresenter x:Name="IconContent" Content="{TemplateBinding Icon}" />
                            </Viewbox>
                            <TextBlock
                                x:Name="TextBlock"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Stretch"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Text}"
                                TextTrimming="None"
                                TextWrapping="Wrap" />
                            <TextBlock
                                x:Name="KeyboardAcceleratorTextBlock"
                                Grid.Column="1"
                                MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                Margin="24,0,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                Visibility="Collapsed" />

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundPointerOver}" />
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushPointerOver}" />
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}" />
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundPressed}" />
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushPressed}" />
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundPressed}" />
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="LayoutRoot" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource MenuFlyoutItemRevealBackgroundDisabled}" />
                                            <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource MenuFlyoutItemRevealBorderBrushDisabled}" />
                                            <Setter Target="IconContent.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                                            <Setter Target="TextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}" />
                                            <Setter Target="KeyboardAcceleratorTextBlock.Foreground" Value="{ThemeResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckPlaceholderStates">
                                    <VisualState x:Name="NoPlaceholder" />
                                    <VisualState x:Name="CheckPlaceholder">
                                        <VisualState.Setters>
                                            <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="IconPlaceholder">
                                        <VisualState.Setters>
                                            <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                            <Setter Target="IconRoot.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckAndIconPlaceholder">
                                        <VisualState.Setters>
                                            <Setter Target="TextBlock.Margin" Value="{ThemeResource MenuFlyoutItemDoublePlaceholderThemeThickness}" />
                                            <Setter Target="IconRoot.Margin" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                            <Setter Target="IconRoot.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaddingSizeStates">
                                    <VisualState x:Name="DefaultPadding" />
                                    <VisualState x:Name="NarrowPadding">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                    <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                    <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                        <VisualState.Setters>
                                            <Setter Target="KeyboardAcceleratorTextBlock.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <DataTemplate x:Key="ItemTemplate" x:DataType="data:Addon">
            <Grid
                x:Name="AddonGrid"
                Height="50"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                IsHitTestVisible="True"
                IsRightTapEnabled="True"
                Opacity="{x:Bind NotIgnoredOpacity, Mode=OneWay}"
                RightTapped="UIElement_OnRightTapped">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18*" />
                    <ColumnDefinition Width="15*" />
                    <!--<ColumnDefinition Width="20" />-->
                    <ColumnDefinition Width="15*" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    Width="180"
                    IsHitTestVisible="False">
                    <TextBlock
                        Height="25"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="SemiBold"
                        IsHitTestVisible="False"
                        Text="{x:Bind FolderName, Mode=OneWay}" />
                    <TextBlock
                        Height="25"
                        IsHitTestVisible="False"
                        Text="{x:Bind CurrentReleaseTypeAndVersion, Mode=OneWay}" />
                </StackPanel>
                <StackPanel
                    Grid.Column="1"
                    Width="150"
                    Padding="{StaticResource XXSmallLeftMargin}"
                    IsHitTestVisible="False">
                    <TextBlock
                        Height="25"
                        IsHitTestVisible="False"
                        Text="{x:Bind SuggestedDownload.ReleaseType, Mode=OneWay}" />
                    <TextBlock
                        Height="25"
                        IsHitTestVisible="False"
                        Text="{x:Bind SuggestedDownload.Version, Mode=OneWay}" />
                </StackPanel>
                <!--<StackPanel Grid.Column="2">
                    <TextBlock
                        Width="15"
                        Height="15"
                        Margin="0,8,0,2"
                        HorizontalTextAlignment="Center"
                        Opacity="0.7"
                        Text="R" />
                    <Grid
                        Width="15"
                        Height="19"
                        Margin="0,2,0,4">
                        <TextBlock
                            Width="15"
                            Height="15"
                           Margin="0 0 0 4"
                            HorizontalTextAlignment="Center"
                            Opacity="0.7"
                            Text="A" />
                        <Viewbox

                            MaxHeight="15" MaxWidth="15">
                            <SymbolIcon
                            Opacity="0.7"
                            Symbol="Refresh" />
                        </Viewbox>

                    </Grid>

                </StackPanel>-->
                <StackPanel
                    Grid.Column="2"
                    Width="150"
                    Padding="{StaticResource XXSmallLeftMargin}"
                    IsHitTestVisible="True">
                    <ProgressBar
                        Width="145"
                        Margin="{StaticResource XXSmallTopMargin}"
                        IsHitTestVisible="False"
                        IsIndeterminate="{x:Bind IsIndeterminate, Mode=OneWay}"
                        Visibility="{x:Bind IsProgressing, Mode=OneWay}"
                        Value="{x:Bind Progress, Mode=OneWay}" />
                    <Button
                        Margin="0,9,0,9"
                        Click="UpdateButtonClick"
                        Content="Update"
                        IsHitTestVisible="True"
                        Tag="{x:Bind}"
                        Visibility="{x:Bind IsUpdateable, Mode=OneWay}">
                        <!--<StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Download" />
                            <TextBlock Text="Update" />
                        </StackPanel>-->
                    </Button>
                    <TextBlock
                        Height="20"
                        IsHitTestVisible="False"
                        Text="{x:Bind Status, Mode=OneWay}"
                        Visibility="{x:Bind ShowStatus, Mode=OneWay}" />
                    <TextBlock
                        Height="20"
                        IsHitTestVisible="False"
                        Text="{x:Bind Message, Mode=OneWay}"
                        Visibility="{x:Bind ShowMessage, Mode=OneWay}" />

                </StackPanel>
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout
                        Windows10version1809:ShowMode="Transient"
                        Windows10version1903:ShouldConstrainToRootBounds="True"
                        Opening="FlyoutBase_OnOpening">
                        <MenuFlyoutItem
                            Command="{Binding SetIgnored}"
                            Tag="{x:Bind Mode=OneWay}"
                            Text="Ignored">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Accept" Visibility="{x:Bind IsIgnored, Mode=OneWay}" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            Command="{Binding SetAutoUpdate}"
                            Tag="{x:Bind Mode=OneWay}"
                            Text="Auto Update">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Accept" Visibility="{x:Bind IsAutoUpdate, Mode=OneWay}" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator />
                        <!-- <MenuFlyoutItem Command="{Binding SetAlpha}" Text="Alpha">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Accept" Visibility="{x:Bind IsAlpha, Mode=OneWay}" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{Binding SetBeta}" Text="Beta">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Accept" Visibility="{x:Bind IsBeta, Mode=OneWay}" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{Binding SetRelease}" Text="Release">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Accept" Visibility="{x:Bind IsRelease, Mode=OneWay}" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>-->
                        <MenuFlyoutSubItem Text="{x:Bind PreferredReleaseType, Mode=OneWay}">
                            <winui:RadioMenuFlyoutItem
                                Command="{Binding SetAlpha}"
                                GroupName="ReleaseType"
                                IsChecked="{x:Bind IsAlpha, Mode=OneWay}"
                                Text="Alpha" />
                            <winui:RadioMenuFlyoutItem
                                Command="{Binding SetBeta}"
                                GroupName="ReleaseType"
                                IsChecked="{x:Bind IsBeta, Mode=OneWay}"
                                Text="Beta" />
                            <winui:RadioMenuFlyoutItem
                                Command="{Binding SetRelease}"
                                GroupName="ReleaseType"
                                IsChecked="{x:Bind IsRelease, Mode=OneWay}"
                                Text="Release" />
                        </MenuFlyoutSubItem>
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            Click="MenuFlyoutItem_Click_Refresh_Addon"
                            Tag="{x:Bind Mode=OneWay}"
                            Text="Refresh">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Sync" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            Click="MenuFlyoutItem_Click_Remove_Addon"
                            Tag="{x:Bind Mode=OneWay}"
                            Text="Remove...">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Delete" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem
                            Click="MenuFlyoutItem_Click_Open_Edit_URL_DIALOG"
                            Tag="{x:Bind Mode=OneWay}"
                            Text="Set URL..." />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutSubItem Name="VersionsMenuFlyout" Text="Versions" />
                        <MenuFlyoutSubItem Text="Info">
                            <MenuFlyoutItem Style="{StaticResource mysyle2}" Text="{x:Bind InfoString, Mode=OneWay}" />
                        </MenuFlyoutSubItem>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>

            </Grid>
            <!--<StackPanel Width="50">
                            <Ellipse Height="44" Width="44" VerticalAlignment="Center">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="../Assets/Square44x44Logo.png"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </StackPanel>-->

        </DataTemplate>




        <!--<DataTemplate x:Key="ItemTemplate" x:DataType="data:Addon">
            <Grid Height="60">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <FontIcon
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontSize="32"
                    Glyph="" />
                <StackPanel
                    Grid.Column="1"
                    Margin="{StaticResource SmallLeftMargin}"
                    VerticalAlignment="Center">
                    <TextBlock Style="{ThemeResource ListTitleStyle}" Text="{x:Bind FolderName}" />
                    <TextBlock Style="{StaticResource ListSubTitleStyle}" Text="{x:Bind Status}" />
                </StackPanel>
            </Grid>
        </DataTemplate>-->

        <DataTemplate x:Key="DetailsTemplate">
            <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <views:MasterDetailDetailControl MasterMenuItem="{Binding}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="NoSelectionContentTemplate">
            <Grid Background="{StaticResource AppChromeAcrylicHostBackdropMediumLowBrush}">
                <TextBlock
                    x:Uid="MasterDetail_NoSelection"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    TextAlignment="Center" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MasterHeaderTemplate" x:DataType="data:Session">
            <StackPanel Height="40" Orientation="Horizontal">
                <AppBarButton
                    Click="DownloadVersionsForAllAddonsInSelectedGame"
                    IsEnabled="{x:Bind IsRefreshButtonEnabled, Mode=OneWay}"
                    ToolTipService.ToolTip="Get new version from net">
                    <StackPanel Orientation="Horizontal">
                        <ProgressRing x:Name="RefreshButtonProgressRing" Visibility="Collapsed" />
                        <SymbolIcon
                            x:Name="RefreshButtonIcon"
                            Symbol="Sync"
                            Visibility="Visible" />
                    </StackPanel>
                </AppBarButton>
                <AppBarButton
                    Click="EditNameofSelectedGame"
                    Icon="Edit"
                    IsEnabled="{x:Bind IsGameSelected, Mode=OneWay}"
                    ToolTipService.ToolTip="Edit Name" />
                <AppBarButton
                    Click="RemoveSelectedGame"
                    Icon="Delete"
                    IsEnabled="{x:Bind IsGameSelected, Mode=OneWay}"
                    ToolTipService.ToolTip="Remove Game" />
                <!--<Button Width="130" Click="DownloadVersionsForAllAddonsInSelectedGame">
                    <StackPanel Orientation="Horizontal">
                        <ProgressRing x:Name="RefreshButtonProgressRing" Visibility="Collapsed" />
                -->
                <!--<SymbolIcon Symbol="Sync" />-->
                <!--
                        <TextBlock Text="Refresh" />
                    </StackPanel>-->
                <!--</Button>-->
                <!--<Button
                    Width="130"
                    Margin="{StaticResource SmallLeftMargin}"
                    Click="RemoveSelectedGame">
                    Remove Game...
                </Button>-->
            </StackPanel>
        </DataTemplate>
        <!--<DataTemplate x:Key="MinimalMasterHeaderTemplate">
            <StackPanel Height="40" Orientation="Horizontal">
                <Button Click="DownloadVersionsForAllAddonsInSelectedGame">Refresh2</Button>
                <Button Margin="{StaticResource SmallLeftMargin}" Click="RemoveSelectedGame">Remove Game...</Button>
            </StackPanel>
        </DataTemplate>-->
    </Page.Resources>

    <Grid x:Name="ContentArea">
        <controls:MasterDetailsView
            x:Name="MasterDetailsViewControl"
            BackButtonBehavior="Manual"
            Background="{StaticResource AppChromeAcrylicHostBackdropMediumLowBrush}"
            BorderBrush="Transparent"
            CompactModeThresholdWidth="1"
            DetailsTemplate="{StaticResource DetailsTemplate}"
            ItemTemplate="{StaticResource ItemTemplate}"
            ItemsSource="{x:Bind ViewModel.Addons, Mode=OneWay}"
            MasterHeader="{x:Bind ViewModel.Session}"
            MasterHeaderTemplate="{StaticResource MasterHeaderTemplate}"
            MasterPaneWidth="600"
            NoSelectionContentTemplate="{StaticResource NoSelectionContentTemplate}"
            SelectedItem="{x:Bind ViewModel.Selected, Mode=TwoWay}"
            Style="{StaticResource mymaster}" />

        <TextBlock
            Margin="24,40,0,0"
            Style="{StaticResource DetailBodyBaseMediumStyle}"
            Text="No Game Found"
            Visibility="{x:Bind ViewModel.Session.IsNoGameSelected, Mode=OneWay}" />

        <!--<controls:GridSplitter Grid.Column="1" Width="11" ResizeBehavior="CurrentAndNext"
            ResizeDirection="Columns" Background="Gray" Foreground="White" FontSize="13">
            <controls:GridSplitter.Element>
                <Grid>
                    <TextBlock HorizontalAlignment="Center" IsHitTestVisible="False" VerticalAlignment="Center"
                               Text="&#xE784;" Foreground="Black" FontFamily="Segoe MDL2 Assets">
                    </TextBlock>
                </Grid>
            </controls:GridSplitter.Element>
        </controls:GridSplitter>-->

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
        -->
        <!--  641 is the default CompactModeThresholdWidth in NavigationView  -->
        <!--
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
        -->
        <!--<VisualState.Setters>
                        <Setter Target="MasterDetailsViewControl.MasterHeaderTemplate" Value="{StaticResource MasterHeaderTemplate}" />-->
        <!--</VisualState.Setters>-->
        <!--
                </VisualState>
            </VisualStateGroup>-->
        <!--</VisualStateManager.VisualStateGroups>-->


        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterDetailsViewControl.MasterHeaderTemplate" Value="{StaticResource MasterHeaderTemplate}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>



<!--
    ItemsSource="{x:Bind ViewModel.Addons, Mode=OneWay}"
    ItemsSource="{x:Bind ViewModel.Session.SelectedGame.Addons, Mode=OneWay}"
    ItemsSource="{x:Bind ViewModel.Session.SelectedGame.Addons, Mode=OneWay}"
    BorderBrush="Transparent"
    MasterHeader="MasterDetail"
    MasterHeaderTemplate="{StaticResource MinimalMasterHeaderTemplate}"
-->

<!--  Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"  -->

<!--
Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"


 <ListView
                                        x:Name="MasterList"
                                        Grid.Row="1"
                                        IsTabStop="False"
                                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ItemsSource="{TemplateBinding ItemsSource}"
                                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
